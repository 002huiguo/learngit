git暂存区。

git commit -m "提交描述"  将暂存区中的修改提交到git仓库。

git commit -a 前面两步的结合，可以直接从工作区，提交到仓库。

git status 查看当前git仓库的状态。

git status -s 简化输出当前git仓库的状态。

git diff <FileName> 对这个文件修改后，在add到暂存区之前可以查看暂存区和工作目录的差异。

git log 查看提交历史。

git log --graph --pretty=oneline --abbrev-commit 查看分支合并图。

git log --oneline 简化显示。

git reset --hard HEAD^  git版本回退，一个^代表往前回退一个版本^^代表回退两个  HEAD~100 就是100个版本。

git reset --hard （1094a） --> 提交的id号，根据commit的id也可以指定版本。

git reflog 用来记录你的每一次命令。

git check -- <FileName> 如果这个文件修改后没有add到暂存区，这个命令就会将版本库中的内容覆盖工作区，如果已经add到暂存区之后修改了文件内容，那么就会将暂存区中的内容覆盖掉工作区。

git branch 查看当前仓储库的所有分支。

git branch <branchName> 创建一个分支。

git checkout -b <name> 创建一个分支，并且将HEAD指针切换到该分支上。

git branch -d <branchName> 删除某个分支。

git merge <branch> 合并某个分支 Fast forward模式。

git checkout <branchName> 切换分支。

git merge --no-ff -m "" <branchName> 合并分支，禁用Fast forward。

git stash 储藏当前工作目录。

git stash list 查看储藏的所有工作目录。

git stash pop 恢复储藏的工作目录，并将该储藏删除掉。

git stash apply 编号 恢复指定的工作目录，但是不删除该储藏。

cherry-pick <commit id> 复制该提交的操作。

git tag <tagname> 新建一个标签，默认为HEAD，也可以指定一个commit id。

git tag -a <tagname> -m "blablabla..."可以指定标签信息。

git tag可以查看所有标签。

git tag -d <tagname>可以删除一个本地标签。

git push origin <tagname>可以推送一个本地标签。

git push origin --tags可以推送全部未推送过的本地标签。

git push origin :refs/tags/<tagname>可以删除一个远程标签。
